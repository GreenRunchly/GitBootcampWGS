<? if (typeof navstatus == "undefined") { navstatus = 'index' }   ?>
<? if (typeof title == "undefined") { title = 'IeuClassroom' }   ?>
<? if (typeof desc == "undefined") { desc = 'Aplikasi belajar berbasis web secara online!' }   ?>
<? if (typeof keywords == "undefined") { keywords = 'IeuClassroom, Classroom, E-Learning' }   ?>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><?= title ?></title>
    <meta name="description" content="<?= desc ?>">
    <meta name="author" content="Rizki Irfan Anshori">
    <meta name="keywords" content="<?= keywords ?>">
    <link rel="stylesheet" type="text/css" href="/assets/css/kulit.css?ver=2">
    <!-- <link rel="stylesheet" type="text/css" href="/assets/css/kulit-lowend-spec.css"> -->
    <!-- <link rel="stylesheet" type="text/css" href="/assets/css/theme-purple.css"> -->
    <link rel="stylesheet" href="/assets/fontawesome/5.13.0/web/css/all.css"/>
    <script src="/assets/js/jquery-3.6.3.min.js"></script>
    <script src="/assets/js/base64.min.js"></script>
</head>
<script>
    /* Other Function */
    var MD5=function(s){function L(k,d){return(k<<d)|(k>>>(32-d))}function K(G,k){var I,d,F,H,x;F=(G&2147483648);H=(k&2147483648);I=(G&1073741824);d=(k&1073741824);x=(G&1073741823)+(k&1073741823);if(I&d){return(x^2147483648^F^H)}if(I|d){if(x&1073741824){return(x^3221225472^F^H)}else{return(x^1073741824^F^H)}}else{return(x^F^H)}}function r(d,F,k){return(d&F)|((~d)&k)}function q(d,F,k){return(d&k)|(F&(~k))}function p(d,F,k){return(d^F^k)}function n(d,F,k){return(F^(d|(~k)))}function u(G,F,aa,Z,k,H,I){G=K(G,K(K(r(F,aa,Z),k),I));return K(L(G,H),F)}function f(G,F,aa,Z,k,H,I){G=K(G,K(K(q(F,aa,Z),k),I));return K(L(G,H),F)}function D(G,F,aa,Z,k,H,I){G=K(G,K(K(p(F,aa,Z),k),I));return K(L(G,H),F)}function t(G,F,aa,Z,k,H,I){G=K(G,K(K(n(F,aa,Z),k),I));return K(L(G,H),F)}function e(G){var Z;var F=G.length;var x=F+8;var k=(x-(x%64))/64;var I=(k+1)*16;var aa=Array(I-1);var d=0;var H=0;while(H<F){Z=(H-(H%4))/4;d=(H%4)*8;aa[Z]=(aa[Z]|(G.charCodeAt(H)<<d));H++}Z=(H-(H%4))/4;d=(H%4)*8;aa[Z]=aa[Z]|(128<<d);aa[I-2]=F<<3;aa[I-1]=F>>>29;return aa}function B(x){var k="",F="",G,d;for(d=0;d<=3;d++){G=(x>>>(d*8))&255;F="0"+G.toString(16);k=k+F.substr(F.length-2,2)}return k}function J(k){k=k.replace(/rn/g,"n");var d="";for(var F=0;F<k.length;F++){var x=k.charCodeAt(F);if(x<128){d+=String.fromCharCode(x)}else{if((x>127)&&(x<2048)){d+=String.fromCharCode((x>>6)|192);d+=String.fromCharCode((x&63)|128)}else{d+=String.fromCharCode((x>>12)|224);d+=String.fromCharCode(((x>>6)&63)|128);d+=String.fromCharCode((x&63)|128)}}}return d}var C=Array();var P,h,E,v,g,Y,X,W,V;var S=7,Q=12,N=17,M=22;var A=5,z=9,y=14,w=20;var o=4,m=11,l=16,j=23;var U=6,T=10,R=15,O=21;s=J(s);C=e(s);Y=1732584193;X=4023233417;W=2562383102;V=271733878;for(P=0;P<C.length;P+=16){h=Y;E=X;v=W;g=V;Y=u(Y,X,W,V,C[P+0],S,3614090360);V=u(V,Y,X,W,C[P+1],Q,3905402710);W=u(W,V,Y,X,C[P+2],N,606105819);X=u(X,W,V,Y,C[P+3],M,3250441966);Y=u(Y,X,W,V,C[P+4],S,4118548399);V=u(V,Y,X,W,C[P+5],Q,1200080426);W=u(W,V,Y,X,C[P+6],N,2821735955);X=u(X,W,V,Y,C[P+7],M,4249261313);Y=u(Y,X,W,V,C[P+8],S,1770035416);V=u(V,Y,X,W,C[P+9],Q,2336552879);W=u(W,V,Y,X,C[P+10],N,4294925233);X=u(X,W,V,Y,C[P+11],M,2304563134);Y=u(Y,X,W,V,C[P+12],S,1804603682);V=u(V,Y,X,W,C[P+13],Q,4254626195);W=u(W,V,Y,X,C[P+14],N,2792965006);X=u(X,W,V,Y,C[P+15],M,1236535329);Y=f(Y,X,W,V,C[P+1],A,4129170786);V=f(V,Y,X,W,C[P+6],z,3225465664);W=f(W,V,Y,X,C[P+11],y,643717713);X=f(X,W,V,Y,C[P+0],w,3921069994);Y=f(Y,X,W,V,C[P+5],A,3593408605);V=f(V,Y,X,W,C[P+10],z,38016083);W=f(W,V,Y,X,C[P+15],y,3634488961);X=f(X,W,V,Y,C[P+4],w,3889429448);Y=f(Y,X,W,V,C[P+9],A,568446438);V=f(V,Y,X,W,C[P+14],z,3275163606);W=f(W,V,Y,X,C[P+3],y,4107603335);X=f(X,W,V,Y,C[P+8],w,1163531501);Y=f(Y,X,W,V,C[P+13],A,2850285829);V=f(V,Y,X,W,C[P+2],z,4243563512);W=f(W,V,Y,X,C[P+7],y,1735328473);X=f(X,W,V,Y,C[P+12],w,2368359562);Y=D(Y,X,W,V,C[P+5],o,4294588738);V=D(V,Y,X,W,C[P+8],m,2272392833);W=D(W,V,Y,X,C[P+11],l,1839030562);X=D(X,W,V,Y,C[P+14],j,4259657740);Y=D(Y,X,W,V,C[P+1],o,2763975236);V=D(V,Y,X,W,C[P+4],m,1272893353);W=D(W,V,Y,X,C[P+7],l,4139469664);X=D(X,W,V,Y,C[P+10],j,3200236656);Y=D(Y,X,W,V,C[P+13],o,681279174);V=D(V,Y,X,W,C[P+0],m,3936430074);W=D(W,V,Y,X,C[P+3],l,3572445317);X=D(X,W,V,Y,C[P+6],j,76029189);Y=D(Y,X,W,V,C[P+9],o,3654602809);V=D(V,Y,X,W,C[P+12],m,3873151461);W=D(W,V,Y,X,C[P+15],l,530742520);X=D(X,W,V,Y,C[P+2],j,3299628645);Y=t(Y,X,W,V,C[P+0],U,4096336452);V=t(V,Y,X,W,C[P+7],T,1126891415);W=t(W,V,Y,X,C[P+14],R,2878612391);X=t(X,W,V,Y,C[P+5],O,4237533241);Y=t(Y,X,W,V,C[P+12],U,1700485571);V=t(V,Y,X,W,C[P+3],T,2399980690);W=t(W,V,Y,X,C[P+10],R,4293915773);X=t(X,W,V,Y,C[P+1],O,2240044497);Y=t(Y,X,W,V,C[P+8],U,1873313359);V=t(V,Y,X,W,C[P+15],T,4264355552);W=t(W,V,Y,X,C[P+6],R,2734768916);X=t(X,W,V,Y,C[P+13],O,1309151649);Y=t(Y,X,W,V,C[P+4],U,4149444226);V=t(V,Y,X,W,C[P+11],T,3174756917);W=t(W,V,Y,X,C[P+2],R,718787259);X=t(X,W,V,Y,C[P+9],O,3951481745);Y=K(Y,h);X=K(X,E);W=K(W,v);V=K(V,g)}var i=B(Y)+B(X)+B(W)+B(V);return i.toLowerCase()};
    function autoSelectInput(ini) {
        $(ini).focus();
        $(ini).select();
        document.execCommand('copy');
        notifAdd('Salin Berhasil!', `${$(ini).val()} berhasil disalin!`, 'ok', 0, true, false);
    }
    function waktuHMS(timestamp) {
        // Dalam millisecond, bukan second
        let waktu = ubahTimestamp(timestamp);
        return formattedTime = ('0' + waktu.jam).substr(-2) + ':' + ('0' + waktu.menit).substr(-2) + ':' + ('0' + waktu.detik).substr(-2);
    }
    function waktuFull(timestamp) {
        // Dalam millisecond, bukan second
        let waktu = ubahTimestamp(timestamp);
        return formattedTime = `${waktu.hari}, ${waktu.tanggal} ${waktu.bulan} ${waktu.tahun}, ${('0' + waktu.jam).substr(-2)}:${('0' + waktu.menit).substr(-2)}`;
    }
    function ubahTimestamp(timestamp) {
        // Dalam millisecond, bukan second
        let date = new Date(timestamp);
        let keluaran = {};

        // Memecah data menjadi masing-masing bagian format tanggal
        keluaran['tahun'] = date.getFullYear();
        let bulan = date.getMonth();
        keluaran['tanggal'] = date.getDate();
        let hari = date.getDay();
        keluaran['jam'] = date.getHours();
        keluaran['menit'] = date.getMinutes();
        keluaran['detik'] = date.getSeconds();

        // Format Tanggal Hari
        switch(hari) {
            case 0: hari = "Minggu"; break;
            case 1: hari = "Senin"; break;
            case 2: hari = "Selasa"; break;
            case 3: hari = "Rabu"; break;
            case 4: hari = "Kamis"; break;
            case 5: hari = "Jum'at"; break;
            case 6: hari = "Sabtu"; break;
        }
        keluaran['hari'] = hari;

        // Format tanggal bulan
        switch(bulan) {
            case 0: bulan = "Januari"; break;
            case 1: bulan = "Februari"; break;
            case 2: bulan = "Maret"; break;
            case 3: bulan = "April"; break;
            case 4: bulan = "Mei"; break;
            case 5: bulan = "Juni"; break;
            case 6: bulan = "Juli"; break;
            case 7: bulan = "Agustus"; break;
            case 8: bulan = "September"; break;
            case 9: bulan = "Oktober"; break;
            case 10: bulan = "November"; break;
            case 11: bulan = "Desember"; break;
        }
        keluaran['bulan'] = bulan;
        
        return keluaran;
    }
    
    /* Notification */
    function notifShowPanel(){
        // console.log(`opening Notification Panel...`);
        $(`#notificationPanel`).attr('open','');
    }
    function notifClosePanel(){
        // console.log(`Closing Notification Panel...`);
        $(`#notificationPanel`).removeAttr('open');
    }
    function notifShow(notifid){
        // console.log(`Opening single notification.. ${notifid}`);
        if ($(`#notificationPanel #${notifid}.notif-item.temp`) != null){
            $(`#notificationPanel #${notifid}.notif-item.temp`).addClass('show');
        }
    }
    function notifLoad() {
        // console.log('Load all notification...');
        // History Notifikasi pada browser lokal
        let notifBank = []; 
        if (localStorage.getItem('notification')){
            notifBank = JSON.parse(atob(localStorage.getItem('notification')));
        }
        // console.log(notifBank);
        notifBank.forEach(element => {
            let {title, message, status, when} = element;
            notifAdd(title, message, status, when, false, false);
        });
        
    }
    function notifClear() {
        $(`#notificationPanel .notif-item.temp`).remove();
        localStorage.removeItem('notification');
    }
    function notifRemove(notifid){
        // History Notifikasi pada browser lokal
        let notifBank = []; 
        if (localStorage.getItem('notification')){
            notifBank = JSON.parse(atob(localStorage.getItem('notification')));
        }
        
        // console.log(`Remove single notification.. ${notifid}`);
        if ($(`#notificationPanel #${notifid}.notif-item.temp`) != null){
            $(`#notificationPanel #${notifid}.notif-item.temp`).remove();
        }
        let when = notifid.slice(5);
        // console.log(when);
        notifBank = $.grep(notifBank, function(e){ 
            return e.when != when; 
        });
        // console.log(notifBank);
        localStorage.setItem('notification', btoa(JSON.stringify(notifBank)));
    }
    
    function notifAdd(title, message, status='none', when=Math.floor(Date.now()), popup=true, save=true) {
        if ((typeof when == undefined) || (when == false)){
            when = Math.floor(Date.now());
        }
        // // console.log(when);

        // Enable or Disable popup
        if (popup == false){ popup = ''; }else{ popup = 'popup'; }

        // History Notifikasi pada browser lokal
        let notifBank = []; 
        if (localStorage.getItem('notification')){
            notifBank = JSON.parse(atob(localStorage.getItem('notification')));
        }

        let iconstatus = ``;
        switch (status) {
            case 'error':
                iconstatus = `<i class="fas fa-exclamation-triangle"></i>`;
                break;
            case 'ok':
                iconstatus = `<i class="fas fa-check"></i>`;
                break;
        
            default:
                iconstatus = `<i class="fas fa-exclamation"></i>`;
                break;
        }
        let questuniqueid = when;
        
        $(`#notificationPanel > .content > .main >.wrapper`).prepend(`
            <div class="notif-item temp ${popup} aksiModal" value="notif-clear-single" id="notif${questuniqueid}">
                <header class="banner color small" cstate="${status}">
                    <div class="title">
                        <h3>${iconstatus}${title}</h3>
                        <p>${waktuHMS(when)} - ${message}</p>
                    </div>
                </header>
            </div>
        `);

        let whut = {title, message, status, when};
        notifBank.push(whut);
        if (save == true){ // Save history?
            localStorage.setItem('notification', btoa(JSON.stringify(notifBank)));
            // localStorage.setItem('notification_history', btoa(JSON.stringify(notifBank)));
        }
    }
    /* Modal */
    // Menampilkan modal modalShow(modalid);
    function modalShow(modalid){
        // console.log(`opening.. ${modalid}`);
        $(`#${modalid}`).attr('open','');
    }
    // Menghilangkan modal modalHide(modalid);
    function modalHide(modalid){
        // console.log(`Closing.. ${modalid}`);
        $(`#${modalid}`).removeAttr('open');
    }
    // Menangani kegagalan modal modalFailed(modalid);
    function modalFailed(modalid){
        $(`#${modalid} .main-loading`).remove();
        $(`#${modalid} .main`).show();
        $(`#${modalid} .aksimodal`).show();
    }
    // Menangani kegagalan modal modalFailed(modalid);
    function modalReset(modalid){
        $(`#${modalid} .main-loading`).remove();
        $(`#${modalid} .main`).show();
        $(`#${modalid} .aksimodal`).show();
    }
    // Mengambil respon pada suatu modal modalResponse(idmodal, ok, cancel);
    function modalResponse(modalid,okstate=()=>{},cancelstate=()=>{}){
        $(document).on('click', `#${modalid} .aksiModal`, function() {
            
            // Kalau valuenya tidak bisa di ambil
            let aksivalue = this.value;
            if (this.value == null){
                aksivalue = $(this).attr('value');
            }

            // console.log(aksivalue);
            switch (aksivalue) {
                case 'ok':
                    let temp = $(`#${modalid} .content .main`).hide();
                    $(`#${modalid} .content`).append(`
                    <div class="main-loading">
                        <header class="banner small">
                            <div class="title">
                                <h1><i class="fas fa-spinner-third"></i> Loading..</h1>
                                <p>Permintaan sedang diproses, harap tunggu...</p>
                            </div>
                        </header>
                    </div>
                    `);
                    $(`#${modalid} .aksimodal`).hide();
                    // Delay the submition, for server sake
                    let lokalInt = setInterval(() => {
                        okstate(modalid); clearInterval(lokalInt);
                    }, Math.random()*1000);
                    break;
                case 'instant-ok':
                    okstate(modalid);
                    break;
                case 'notif-clear-single':
                    let idnotif = $(this).attr('id');
                    notifRemove(idnotif);
                    break;
                case 'notif-clear': 
                    notifClear();
                    notifClosePanel();
                    break;
                case '':
                    
                    break;
                default:
                    modalHide(modalid);
                    cancelstate(modalid, aksivalue);
                    break;
            }
        });
        $(document).bind('close', `#${modalid}`, function() {
            modalFailed(modalid);
        });
    }
    
    $(document).ready(function() {
        $(document).on('click', `a[href]`, function() {
            if ( $(this).attr('href') != '#' ){
                $('body').prepend(`
                    <?- include('loading-screen') ?>
                `);
            }
        });

        // Agar formulir tidak teraksekusi saat tekan enter
        $(window).keydown(function(event){
            if(event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });   

        // Reload halaman kalau mundur
        window.onpageshow = function(event) {
            if (event.persisted) {
                window.location.reload();
            }
        };

    });

    function loadingScreen(){
        // Untuk handle loading screen
        $(".loadingScreen").addClass(`done`); // Tambahkan efek hide
        let endload = setInterval(() => {
            $(".loadingScreen").remove(); // Menghilangkan loading screen
            clearInterval(endload);
        }, 1000);
    } 
    
</script>
<body onload="loadingScreen()">
    <?- include('loading-screen') ?>
<? 
    switch(navstatus) {
        case 'dashboard' : ?> <?- include('navbars/dashboard'); ?> <? break;
        case 'kelas' : ?> <?- include('navbars/kelas'); ?> <? break;
        case 'kelas-single' : ?> <?- include('navbars/kelas-single'); ?> <? break;
        case 'informasi-single' : ?> <?- include('navbars/informasi-single'); ?> <? break;
        case 'login' : ?> <?- include('navbars/login'); ?> <? break; 
        case '404' : ?> <? break; 
        default : ?> <?- include('navbars/index'); ?> <? break;        
    }
?>
<!-- Notification Panel Center -->
<dialog class="notif-panel" id="notificationPanel">
    <div class="panel-back aksiModal" value="close"></div>
    <div class="content">
        <div class="main">
            <header class="banner color small" cstate="normal">
                <div class="title">
                    <h2><i class="far fa-comment-exclamation"></i>Notification</h2>
                </div>
            </header>
            <div class="options">
                <div class="blok-list flex">
                    <button class="button aksiModal" value="notif-clear">
                        <div class="icon"><i class="fas fa-trash"></i></div>
                        <div class="text"><span>Clear All</span></div>
                    </button>
                </div>
            </div>
            <div class="blok-list wrapper">
                <div class="notif-item ghost" >
                    <header class="banner color small" cstate="none">
                        <div class="title">
                            <h3><i class="fas fa-thumbs-up"></i>All good!</h3>
                            <p>Tidak ada notifikasi apapun untuk sekarang...</p>
                        </div>
                    </header>
                </div>
            </div>
        </div>
    </div>
    <script>
        // Handle response masuk modal
        modalResponse('notificationPanel', (modalid) =>{
            modalHide(modalid);
        });
        notifLoad(); // Load all Notification
    </script>
</dialog>

<dialog id="konfirmasiLogout">
    <div class="panel-back aksiModal" value="close"></div>
    <div class="content">
        <div class="main">
            <header class="banner small">
                <div class="title">
                    <h1>Ingin Mengakhiri Sesi?</h1>
                    <p>Anda akan dibawa ke halaman utama setelah ini pilih keluar.</p>
                </div>
            </header>
        </div>
        <div class="options">
            <div class="blok-list flex">
                <button class="button aksiModal" value="ok">
                    <div class="icon"><i class="far fa-check"></i></div>
                    <div class="text"><span>Keluar</span></div>
                </button>
                <button class="button aksiModal" value="batal">
                    <div class="icon"><i class="far fa-times"></i></div>
                    <div class="text"><span>Tidak Jadi</span></div>
                </button>
            </div>
        </div>
    </div>
    <script>
        // Handle response masuk modal
        modalResponse('konfirmasiLogout', (modalid) =>{
            $.ajax({
                type: "POST",
                url: '/api/akun/keluar',
                success: function(data) {
                    if (data.sukses) {
                        async function lakukan() {
                            await notifAdd('Berhasil Keluar!', data.pesan, 'ok', 0, false, true);
                            await modalHide(modalid);
                            window.location = '/';
                        }; lakukan();
                    }else{
                        modalFailed(modalid);
                        notifAdd('Gagal Keluar!', data.pesan, 'error', 0, true, true);
                    }
                },
                error: function(xhr, status, error) {
                    modalFailed(modalid);
                    notifAdd('Gagal Keluar!', `${error} (${status} / ${status})`, 'error', 0, true, true);
                }
            });
        }, (modalid) =>{
            async function lakukan() {
                await notifAdd('Keluar Dibatalkan!', 'Kamu sendiri yang membatalkannya.', 'error', 0, false, true);
                await modalHide(modalid);
            }; lakukan(); 
        });
    </script>
</dialog>